<Application x:Class="Interviewer.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Interviewer"
             xmlns:conv="clr-namespace:Interviewer.Converters"
             StartupUri="Windows/SignUpWindow.xaml">
    <!--StartupUri="Windows/SignUpWindow.xaml"    StartupUri="TestWindow.xaml"  >-->
    <Application.Resources>
        <conv:TextValidationConverter x:Key="textValidationConverter" />
        <conv:EmailValidationConverter x:Key="emailValidationConverter" />
        <conv:MatchConverter x:Key="matchConverter" />
        <conv:BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter" />
        <conv:AllTrueConverter x:Key="allTrueConverter" />

        <ImageBrush x:Key="LightBackgroundBrush" ImageSource="images/1pattern.png" AlignmentY="Top" Stretch="None" Viewport="0,0,400,403" ViewportUnits="Absolute" TileMode="Tile"/>
        <SolidColorBrush x:Key="DarkBackgroundBrush" Color="#222222"/>
        
        <SolidColorBrush x:Key="ForegroundColoredBrush" Color="#F7886F"/>
        <SolidColorBrush x:Key="ForegroundHighlightBrush" Color="#9C9C9C"/>
        <SolidColorBrush x:Key="ForegroundBrush" Color="#CCCCCC"/>
        <SolidColorBrush x:Key="ButtonNormalBrush" Color="#222222"/>
        <SolidColorBrush x:Key="ButtonFocusedBrush" Color="#333333"/>
        <SolidColorBrush x:Key="ButtonPressedBrush" Color="#505050"/>
        <SolidColorBrush x:Key="ButtonDisabledBrush" Color="#9c9c9c"/>
        <SolidColorBrush x:Key="InvalidBrush" Color="#FF2211"/>

        <FontFamily x:Key="DefaultFont">./Fonts/#Akrobat SemiBold</FontFamily>

       
        
        <!-- Button style -->
        <Style TargetType="Button" x:Key="DarkButton">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Padding" Value="13,3"/>
            <Setter Property="FontFamily" Value="{StaticResource DefaultFont}"/>
            <Setter Property="FontSize" Value="16px"/>
            <Setter Property="Background" Value="{StaticResource ButtonNormalBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ForegroundHighlightBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource ForegroundColoredBrush}"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" BorderThickness="1">
                            <Grid>
                                <ContentPresenter Margin="{TemplateBinding Padding}" 
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="{StaticResource ForegroundColoredBrush}" />
                                <Setter Property="Background" Value="{StaticResource ButtonFocusedBrush}" />
                            </Trigger>

                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="{StaticResource ButtonPressedBrush}"/>
                            </Trigger>

                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="{StaticResource ButtonNormalBrush}"/>
                                <Setter Property="Foreground" Value="{StaticResource ButtonDisabledBrush}"/>
                                <Setter Property="BorderBrush" Value="{StaticResource ButtonDisabledBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style TargetType="Button" x:Key="RoundButton">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="FontFamily" Value="{StaticResource DefaultFont}"/>
            <Setter Property="FontSize" Value="16px"/>
            <Setter Property="Background" Value="{StaticResource ButtonNormalBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ForegroundHighlightBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource ForegroundColoredBrush}"/>
            <Setter Property="Width" Value="30"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border BorderBrush="{x:Null}" Background="{TemplateBinding Background}" BorderThickness="1"
                                CornerRadius="100">
                            <Grid>
                                <ContentPresenter Margin="{TemplateBinding Padding}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="{StaticResource ForegroundColoredBrush}" />
                                <Setter Property="Background" Value="{StaticResource ButtonFocusedBrush}" />
                            </Trigger>

                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="{StaticResource ButtonPressedBrush}"/>
                            </Trigger>

                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="{StaticResource ButtonNormalBrush}"/>
                                <Setter Property="Foreground" Value="{StaticResource ButtonDisabledBrush}"/>
                                <Setter Property="BorderBrush" Value="{StaticResource ButtonDisabledBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Common style for TextBox and PasswordBox -->
        <Style x:Key="DarkCommonBox">
            <Setter Property="Control.Margin" Value="5"/>
            <Setter Property="Control.Padding" Value="2"/>
            <Setter Property="Control.FontFamily" Value="{StaticResource DefaultFont}"/>
            <Setter Property="Control.FontSize" Value="16px"/>
            <Setter Property="Control.Background" Value="{StaticResource ButtonFocusedBrush}"/>
            <Setter Property="Control.BorderBrush" Value="{StaticResource ForegroundHighlightBrush}"/>
            <Setter Property="Control.Foreground" Value="{StaticResource ForegroundBrush}"/>
            <Setter Property="TextBox.SelectionBrush" Value="{StaticResource ForegroundHighlightBrush}"/>
            <Setter Property="PasswordBox.SelectionBrush" Value="{StaticResource ForegroundHighlightBrush}"/>

            <Style.Triggers>
                <Trigger Property="Control.IsFocused" Value="True">
                    <Setter Property="Control.BorderBrush" Value="{StaticResource ForegroundColoredBrush}"/>
                </Trigger>
                <Trigger Property="Control.IsMouseOver" Value="True">
                    <Setter Property="Control.BorderBrush" Value="{StaticResource ForegroundColoredBrush}"/>
                </Trigger>
                <Trigger Property="Control.IsEnabled" Value="False">
                    <Setter Property="Control.Foreground" Value="{StaticResource ButtonDisabledBrush}"/>
                </Trigger>
                <Trigger Property="local:Ext.IsValid" Value="False">
                    <Setter Property="Control.BorderBrush" Value="{StaticResource InvalidBrush}"/>
                </Trigger>
            </Style.Triggers>
        </Style>


        
        <!-- TextBox template -->
        <Style x:Key="DarkTextBox" TargetType="TextBox" BasedOn="{StaticResource DarkCommonBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1">
                            <Grid>
                                <ScrollViewer Margin="0" x:Name="PART_ContentHost"/>
                                <TextBlock IsHitTestVisible="False" VerticalAlignment="Center" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                           Foreground="{TemplateBinding Foreground}" Opacity="0.35"
                                           Padding="{TemplateBinding Padding}"
                                           Text="{TemplateBinding local:Ext.Placeholder}"
                                           FontFamily="{TemplateBinding FontFamily}"
                                           >
                                           <!--Width="{Binding ActualWidth, ElementName=PART_ContentHost}"-->
                                           <!-- Do not make textbox larger than text -->
                                   
                                    <TextBlock.Style>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="Visibility" Value="Hidden"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}" Value="">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>



        <!-- PasswordBox template -->
        <Style x:Key="DarkPasswordBox" TargetType="PasswordBox" BasedOn="{StaticResource DarkCommonBox}">
            <Setter Property="TextBox.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="PasswordBox">
                        <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1">
                            <Grid>
                                <ScrollViewer Margin="0" x:Name="PART_ContentHost"/>
                                <TextBlock IsHitTestVisible="False" VerticalAlignment="Center" HorizontalAlignment="Left"
                                           Foreground="{TemplateBinding Foreground}" Opacity="0.35"
                                           Padding="3,0,0,0"
                                           Text="{TemplateBinding local:Ext.Placeholder}"
                                           Width="{Binding ActualWidth, ElementName=PART_ContentHost}"
                                           >
                                    <TextBlock.Style>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=(local:Pwd.Password), RelativeSource={RelativeSource TemplatedParent}}" Value="">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Path=(local:Pwd.Password), RelativeSource={RelativeSource TemplatedParent}}" Value="{x:Null}">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        
        <!-- ListView style -->

        <Style TargetType="ListView">
            <Setter Property="Background" Value="{x:Null}"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <!--<Setter Property="ScrollViewer.CanContentScroll" Value="False"/>-->
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="{x:Type ListViewItem}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListViewItem}">
                                    <Border SnapsToDevicePixels="True"  
                                            BorderThickness="{TemplateBinding BorderThickness}"   
                                            BorderBrush="{TemplateBinding BorderBrush}"   
                                            Background="{TemplateBinding Background}">
                                        <Border Name="InnerBorder" BorderThickness="1">
                                            <ScrollContentPresenter Margin="10" Name="PART_ScrollContentPresenter"
                                                    KeyboardNavigation.DirectionalNavigation="Local"
                                                    CanContentScroll="False"
                                                    CanHorizontallyScroll="False"
                                                    CanVerticallyScroll="False" />
                                        </Border>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="{x:Null}" />
                                            <Setter Property="BorderBrush" Value="{x:Null}" />
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>

        <!--<Style x:Key="DarkTextBlock" TargetType="TextBlock">
            <Setter Property="FontFamily" Value="Akrobat SemiBold"/>
            <Setter Property="FontSize" Value="12px"/>
            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
        </Style>-->
        
        <Style TargetType="Button" BasedOn="{StaticResource DarkButton}"/>
        <Style TargetType="TextBox" BasedOn="{StaticResource DarkTextBox}"/>
        <Style TargetType="PasswordBox" BasedOn="{StaticResource DarkPasswordBox}"/>

    </Application.Resources>
</Application>
