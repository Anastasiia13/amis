CREATE TABLE "USERS" 
   (	"EMAIL" VARCHAR2(50 BYTE) NOT NULL ENABLE, 
	"PASS" VARCHAR2(20 BYTE) NOT NULL ENABLE, 
	"NAME" VARCHAR2(20 BYTE) NOT NULL ENABLE, 
	"ROLE" VARCHAR2(20 BYTE) NOT NULL ENABLE, 
	 CONSTRAINT "USERS_PK" PRIMARY KEY ("EMAIL")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

  CREATE TABLE "FLATS" 
   (	"REALTOR_EMAIL" VARCHAR2(50 BYTE), 
	"ROOMS_COUNT" NUMBER, 
	"DESCRIPTION" VARCHAR2(1000 BYTE), 
	"PRICE_PER_MOUNTH" NUMBER NOT NULL ENABLE, 
	"STREET" VARCHAR2(50 BYTE) NOT NULL ENABLE, 
	"AREA" NUMBER NOT NULL ENABLE, 
	"HOUSE_NUMBER" VARCHAR2(4 BYTE) NOT NULL ENABLE, 
	"FLAT_NUMBER" NUMBER NOT NULL ENABLE, 
	 CONSTRAINT "FLATS_PK" PRIMARY KEY ("STREET", "HOUSE_NUMBER", "FLAT_NUMBER")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE, 
	 CONSTRAINT "FLATS_FK1" FOREIGN KEY ("REALTOR_EMAIL")
	  REFERENCES "USERS" ("EMAIL") ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
 

  CREATE TABLE "ORDERS" 
   (	"TENANT_EMAIL" VARCHAR2(50 BYTE) NOT NULL ENABLE, 
	"START_RENT" NUMBER(20,0), 
	"END_RENT" NUMBER(20,0), 
	"FLAT_STREET" VARCHAR2(20 BYTE), 
	"FLAT_HOUSE_NUMBER" VARCHAR2(4 BYTE), 
	"FLAT_NUMBER" NUMBER, 
	"ACCEPTED" NUMBER(1,0) NOT NULL ENABLE, 
	 CONSTRAINT "ORDERS_FK2" FOREIGN KEY ("TENANT_EMAIL")
	  REFERENCES "USERS" ("EMAIL") ENABLE, 
	 CONSTRAINT "ORDERS_FK1" FOREIGN KEY ("FLAT_STREET", "FLAT_HOUSE_NUMBER", "FLAT_NUMBER")
	  REFERENCES "FLATS" ("STREET", "HOUSE_NUMBER", "FLAT_NUMBER") ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
 
  CREATE OR REPLACE FORCE VIEW "REALTORSORDER" ("TENANT_EMAIL", "REALTOR_EMAIL", "START_RENT", "END_RENT", "FLAT_STREET", "FLAT_HOUSE_NUMBER", "FLAT_NUMBER", "ACCEPTED") AS 
  Select ORDERS.TENANT_EMAIL, FLATS.REALTOR_EMAIL, ORDERS.START_RENT, ORDERS.END_RENT, ORDERS.flat_street, ORDERS.FLAT_HOUSE_NUMBER, ORDERS.FLAT_NUMBER, ORDERS.ACCEPTED 
      from 
        ORDERS inner join FLATS 
          ON ORDERS.flat_street = FLATS.street AND ORDERS.FLAT_HOUSE_NUMBER = FLATS.HOUSE_NUMBER AND ORDERS.FLAT_NUMBER = FLATS.FLAT_NUMBER;
 /
create or replace PROCEDURE ADDUSER 
(
  EMAIL_ADD IN VARCHAR2 
, PASS_ADD IN VARCHAR2 
, NAME_ADD IN VARCHAR2 
, ROLE_ADD IN VARCHAR2 
) AS 
BEGIN
    INSERT into USERS (email, pass, name, role) VALUES(EMAIL_ADD, PASS_ADD, NAME_ADD, ROLE_ADD);
END ADDUSER;
/
CREATE OR REPLACE PROCEDURE CHANGEROLE 
(
  EMAIL_NEW IN VARCHAR2 
, ROLE_NEW IN VARCHAR2 
) AS 
BEGIN
UPDATE USERS SET role = ROLE_NEW WHERE EMAIL = EMAIL_NEW;
END CHANGEROLE;
/
create or replace PROCEDURE CREATEORDER 
(
  TENANT_EMAIL_ADD IN VARCHAR2 
, START_RENT_ADD IN NUMBER 
, END_RENT_ADD IN NUMBER 
, FLAT_STREET_ADD IN VARCHAR2 
, FLAT_HOUSE_NUMBER_ADD IN VARCHAR2 
, FLAT_NUMBER_ADD IN NUMBER 
, ACCEPTED_ADD IN NUMBER 
) AS 
BEGIN
INSERT into ORDERS (TENANT_EMAIL, START_RENT, END_RENT, FLAT_STREET, FLAT_HOUSE_NUMBER, FLAT_NUMBER, ACCEPTED)
                VALUES (TENANT_EMAIL_ADD, START_RENT_ADD, END_RENT_ADD, FLAT_STREET_ADD, FLAT_HOUSE_NUMBER_ADD, FLAT_NUMBER_ADD, ACCEPTED_ADD);
END CREATEORDER;
/
CREATE OR REPLACE PROCEDURE DELFLAT 
(
  STREET_DEL IN VARCHAR2 
, HOUSE_NUMBER_DEL IN VARCHAR2 
, FLAT_NUMBER_DEL IN NUMBER 
) AS 
BEGIN
  DELETE from FLATS where STREET = STREET_DEL AND HOUSE_NUMBER = HOUSE_NUMBER_DEL AND FLAT_NUMBER = FLAT_NUMBER_DEL;
END DELFLAT;
/
create or replace PROCEDURE DELORDER 
(
  TENANT_EMAIL_DEL IN VARCHAR2 
, START_RENT_DEL IN NUMBER 
, END_RENT_DEL IN NUMBER 
) AS 
BEGIN
  DELETE FROM ORDERS WHERE TENANT_EMAIL = TENANT_EMAIL_DEL AND START+_RENT = START_RENT_DEL AND END_RENT = END_RENT_DEL;
END DELORDER;
/
create or replace PROCEDURE NEWFLAT
(
  REALTOR_EMAIL_ADD IN VARCHAR2 
, ROOMS_COUNT_ADD IN NUMBER 
, DESCRIPTION_ADD IN VARCHAR2 
, PRICE_PER_MOUNTH_ADD IN NUMBER 
, STREET_ADD IN VARCHAR2 
, AREA_ADD IN NUMBER 
, HOUSE_NUMBER_ADD IN VARCHAR2 
, FLAT_NUMBER_ADD IN NUMBER 
) AS 
BEGIN
  INSERT into FLATS (realtor_email, rooms_count, description, price_per_mounth, street, area, house_number, flat_number) VALUES(REALTOR_EMAIL_ADD, ROOMS_COUNT_ADD, DESCRIPTION_ADD, PRICE_PER_MOUNTH_ADD, STREET_ADD, AREA_ADD, HOUSE_NUMBER_ADD, FLAT_NUMBER_ADD);
END NEWFLAT;